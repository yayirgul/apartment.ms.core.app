@{
    ViewData["Title"] = "Pano";
}

@section Subheader {
    <div class="subheader py-2 py-lg-4 subheader-solid" id="kt_subheader">
        <div class="container-fluid d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
            <div class="d-flex align-items-center flex-wrap mr-2">
                <h5 class="text-dark font-weight-bold mt-2 mb-2 mr-5">Dashboard</h5>
                <div class="subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 bg-gray-200"></div>
                <span class="text-muted font-weight-bold mr-4">#XRS-45670</span>
            </div>
            <div class="d-flex align-items-center"></div>
        </div>
    </div>
}

<div class="container-fluid">

    <div class="row">
        <div class="col-xl-12">
            <div class="card card-custom">
                <div class="card-header">
                    <div class="card-title">
                        <span class="card-icon">
                            <i class="far fa-building text-primary"></i>
                        </span>
                        <h3 class="card-label">Giderler</h3>
                    </div>
                    <div class="card-toolbar">

                    </div>
                </div>
                <div class="card-body">

                    <!--begin::Search Form-->
                    <div class="mb-7">
                        <div class="row align-items-center">
                            <div class="col-lg-12 col-xl-12">
                                <div class="row align-items-center">

                                    <div class="col-md-1 my-2 my-md-0">
                                        <div class="d-flex align-items-center">
                                            <select class="form-control" id="combo-filter-apartments">
                                                <option value="expense">Gelirler</option>
                                                <option value="debit">Borçlar</option>
                                            </select>
                                        </div>
                                    </div>

                                    <div class="col-md-1 my-2 my-md-0">
                                        <div class="d-flex align-items-center">
                                            <select class="form-control" id="combo-filter-years">
                                                <option value="2025">2025</option>
                                                <option value="2024">2024</option>
                                            </select>
                                        </div>
                                    </div>
                                     
                                </div>
                            </div>

                        </div>
                    </div>



                    <div id="chart-expense"></div>

                </div>
            </div>
        </div>
    </div>

</div>

@section Scripts {

    <script>

        var _date = new Date();

        const qcs = {
            default: [
                {
                    month: _date.getMonth() + 1,
                    year: _date.getFullYear(),
                }
            ],
            chart: {
                expense : '#chart-expense',
                color: {
                    primary: "#3699FF",
                    success: "#1BC5BD",
                    danger: "#F64E60",
                }
            },
            combo: {
                filter: {
                    apartments: '#combo-filter-apartments',
                    months: '#combo-filter-months',
                    years: '#combo-filter-years'
                }
            }
        }

        function dashboard() {

            $(document).on("change", qcs.combo.filter.years, function () {

                var filter = {
                    apartment_id: $(qcs.combo.filter.apartments).val(),
                    month: $(qcs.combo.filter.months).val(),
                    year: $(this).val(),
                }

                analysis(filter.year);

                // sessionStorage.setItem("_apartment", filter.apartment_id);
                // sessionStorage.setItem("_month", filter.month);
                // sessionStorage.setItem("_year", filter.year);

                // $(qcs.combo.filter.years).children('option').removeAttr('selected');
                // $(qcs.combo.filter.years).find('option[value=' + filter.year + ']').attr('selected', 'selected');

                // $(qcs.combo.expense_months).find('option[value=' + filter.month + ']').attr('selected', 'selected');
                // $(qcs.combo.expense_years).find('option[value=' + filter.year + ']').attr('selected', 'selected');

                // l_expenses(filter.apartment_id, filter.month, filter.year);

            });

        }

        function analysis(year) {

            console.log("YIL : " + year);

            const apexChart = "#chart_3";


            $.get("/ams/dashboard/analysis/16f885ff-6897-4d08-afa6-0640c40d2a05/expense/" + year, function (d) {

                // console.log(JSON.stringify(d.listView));
                console.log(d.listView);


                // typ = Gelir - Borç
                 

                var series = [
                    { 
                        name: 'Gelirler', 
                        data: [d.listView[0].amount, d.listView[1].amount, d.listView[2].amount, d.listView[3].amount, d.listView[4].amount, d.listView[5].amount, d.listView[6].amount, d.listView[7].amount, d.listView[8].amount, d.listView[9].amount, d.listView[10].amount, d.listView[11].amount]
                        // data: ["0,00", "0,00", "0,00", "0,00", "0,00", "0,00", "1.852,80", "772,60", "1.858,60", "2.175", "5.342,68", "0,00"]
                    },
                    // { 
                    //     name: 'Borçlar',
                    //     data: [d.listView[0].amount, d.listView[1].amount, d.listView[2].amount, d.listView[3].amount, d.listView[4].amount, d.listView[5].amount, d.listView[6].amount, d.listView[7].amount, d.listView[8].amount, d.listView[9].amount, d.listView[10].amount, d.listView[11].amount]
                    // }
                ];

                var options = {
                    series: series,
                    chart: {
                        type: 'bar',
                        height: 350
                    },
                    plotOptions: {
                        bar: {
                            horizontal: false,
                            columnWidth: '20%',
                            endingShape: 'rounded'
                        },
                    },
                    dataLabels: {
                        enabled: false
                    },
                    stroke: {
                        show: true,
                        width: 2,
                        colors: ['transparent']
                    },
                    xaxis: {
                        categories: ['Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran', 'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık'],
                    },
                    yaxis: {
                        // title: { text: '$ (thousands)' }
                    },
                    fill: {
                        opacity: 1
                    },
                    tooltip: {
                        y: {
                            formatter: function (val, opts) {

                                var view = d.listView[opts.dataPointIndex];

                                console.log("tutar : " + view._Amount);

                                return "₺ " + view._Amount;
                                // return "₺ " + val.toFixed(0);
                            }
                        }
                    },
                    colors: [qcs.chart.color.primary, qcs.chart.color.danger]
                };

                var chart = new ApexCharts(document.querySelector(qcs.chart.expense), options);
                chart.render();

                chart.updateSeries([{
                    series: series
                }]);



                if (d.isSucceed) {
                    switch (d.statuses) {
                        case 'x-detail':

                            break;
                        case 'x-ndata':

                            break;
                        case 'x-timeout':
                            location.href = "/admin/auth/logout";
                            break;
                        case 'x-fail':

                            break;
                    }
                }

            }).done(function (d) {

            }).fail(function (jqXHR, textStatus, errorThrown) {

            });





        }

        $(function () {
            analysis(2025);
            dashboard();
        });

    </script>

}