@{
    ViewData["Title"] = "Borçlar";
}

@section Subheader {
    <div class="subheader py-2 py-lg-4 subheader-solid" id="kt_subheader">
        <div class="container-fluid d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
            <!--begin::Info-->
            <div class="d-flex align-items-center flex-wrap mr-2">
                <h5 class="text-dark font-weight-bold mt-2 mb-2 mr-5">Borçlar</h5>
                <div class="subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 bg-gray-200"></div>
                <span class="text-muted font-weight-bold mr-4">#XRS-45670</span>
            </div>
            <!--end::Info-->
            <!--begin::Toolbar-->
            <div class="d-flex align-items-center">
            </div>
            <!--end::Toolbar-->
        </div>
    </div>
}

<div class="container-fluid">
    <div class="row">
        <div class="col-xl-12">
            <div class="card card-custom">
                <div class="card-header">
                    <div class="card-title">
                        <span class="card-icon">
                            <i class="far fa-building text-primary"></i>
                        </span>
                        <h3 class="card-label">Borçlar</h3>
                    </div>
                    <div class="card-toolbar">
                        <a href="javascript:;" id="modal-debit-open" class="btn btn-primary font-weight-bolder">
                            Yeni
                        </a>
                    </div>
                </div>
                <div class="card-body">

                    <div class="mb-7">
                        <div class="row align-items-center">
                            <div class="col-lg-12 col-xl-12">
                                <div class="row align-items-center">

                                    <div class="col-md-2 my-2 my-md-0">
                                        <div class="d-flex align-items-center">
                                            <select class="form-control" id="combo-filter-apartments"></select>
                                        </div>
                                    </div>

                                    <div class="col-md-1 my-2 my-md-0">
                                        <div class="d-flex align-items-center">
                                            <select class="form-control" id="combo-filter-paid">
                                                <option value="" selected="selected">Tümü</option>
                                                <option value="1">Ödendi</option>
                                                <option value="2">Ödenmedi</option>
                                            </select>
                                        </div>
                                    </div>

                                    <div class="col-md-1 my-2 my-md-0">
                                        <div class="d-flex align-items-center">
                                            <select class="form-control" id="combo-filter-months">
                                                <option value="1">Ocak</option>
                                                <option value="2">Şubat</option>
                                                <option value="3">Mart</option>
                                                <option value="4">Nisan</option>
                                                <option value="5">Mayıs</option>
                                                <option value="6">Haziran</option>
                                                <option value="7">Temmuz</option>
                                                <option value="8">Ağustos</option>
                                                <option value="9">Eylül</option>
                                                <option value="10">Ekim</option>
                                                <option value="11">Kasım</option>
                                                <option value="12">Aralık</option>
                                            </select>
                                        </div>
                                    </div>

                                    <div class="col-md-1 my-2 my-md-0">
                                        <div class="d-flex align-items-center">
                                            <select class="form-control" id="combo-filter-years">
                                                <option value="2024">2024</option>
                                                <option value="2023">2023</option>
                                            </select>
                                        </div>
                                    </div>

                                    <div class="col-md-7 my-2 my-md-0">
                                        <div class="row align-items-center justify-content-end">

                                            <div class="col-md-12 my-2 my-md-0 d-flex align-items-center justify-content-end">

                                                <div class="input-icon">
                                                    <input type="text" class="form-control" placeholder="Search..." id="kt_datatable_search_query" />
                                                    <span>
                                                        <i class="flaticon2-search-1 text-muted"></i>
                                                    </span>
                                                </div>

                                            </div>

                                        </div>
                                    </div>

                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="datatable datatable-bordered datatable-head-custom" id="t-debits"></div>

                </div>
            </div>

        </div>
    </div>
</div>

<div class="modal fade" id="modal-debit" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="staticBackdrop" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-expense-title">Yeni Gider</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i aria-hidden="true" class="ki ki-close"></i>
                </button>
            </div>
            <div class="modal-body">

                <form class="form" id="fv-form-expense">

                    <div class="form-group mb-0 row">

                        @* <input type="hidden" name="ExpenseId" /> *@

                        <div class="col-xl-12 mb-6">
                            <label>* Apartman</label>
                            <select class="form-control" name="ExpApartments" id="combo-expense-apartments"></select>
                        </div>

                        <div class="col-xl-6 mb-6">
                            <label>* Ay</label>
                            <select class="form-control" id="combo-expense-months">
                                <option value="1">Ocak</option>
                                <option value="2">Şubat</option>
                                <option value="3">Mart</option>
                                <option value="4">Nisan</option>
                                <option value="5">Mayıs</option>
                                <option value="6">Haziran</option>
                                <option value="7">Temmuz</option>
                                <option value="8">Ağustos</option>
                                <option value="9">Eylül</option>
                                <option value="10">Ekim</option>
                                <option value="11">Kasım</option>
                                <option value="12">Aralık</option>
                            </select>
                        </div>

                        <div class="col-xl-6">
                            <label>* Yıl</label>
                            <select class="form-control" id="combo-expense-years">
                                <option value="2024">2024</option>
                                <option value="2023">2023</option>
                            </select>
                        </div>

                        <div class="col-xl-12">
                            <label>* Tutar</label>
                            <input type="text" name="Debit" class="form-control money" id="kt_money_input" maxlength="22" placeholder="0,00">
                        </div>

                    </div>

                </form>

            </div>
            <div class="modal-footer">
                <button type="button" id="button-debit" class="btn btn-primary font-weight-bold">Kaydet</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal-payment" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="staticBackdrop" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-expense-title">Ödeme</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i aria-hidden="true" class="ki ki-close"></i>
                </button>
            </div>
            <div class="modal-body">

                <form class="form" id="form-payment">

                    <input type="hidden" name="DebitId" value="0" />
                    <input type="hidden" name="HousingId" value="0" />

                    <div class="form-group mb-0 row">

                        <div class="col-xl-12">
                            <div class="option mb-6">
                                <div class="option-label">
                                    <div class="option-body pt-0">
                                        <div class="row">

                                            <div class="col-xl-12 mb-4">
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <h6 class="font-size-sm text-dark mb-0">APARTMAN - AY / YIL</h6>
                                                    <span class="btn btn-sm btn-text btn-light-primary font-weight-bold" id="label-apartment-month-year">-</span>
                                                </div>
                                            </div>
                                            <div class="col-xl-12">
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <h6 class="font-size-sm text-dark mb-0">KONUT / SAHİBİ </h6>
                                                    <span class="btn btn-sm btn-text btn-light-success font-weight-bold" id="label-housing-the-housing-user">
                                                        -
                                                    </span>
                                                </div>
                                            </div>
                                            <div class="col-xl-12">
                                                <div class="separator separator-solid my-7"></div>
                                            </div>
                                            <div class="col-xl-12 mb-4">
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <h6 class="font-size-sm text-dark mb-0">KONUT KASA TUTARI</h6>
                                                    <span class="btn btn-sm btn-text btn-light-danger font-weight-bold" id="label-housing-safe-amount">0</span>
                                                </div>
                                            </div>
                                            <div class="col-xl-12">
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <h6 class="font-size-sm text-dark mb-0">ÖDENECEK TUTAR</h6>
                                                    <span class="btn btn-sm btn-text btn-light-danger font-weight-bold" id="label-debit-amount">0</span>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-xl-12">
                            <div class="option mb-6">
                                <div class="option-label">
                                    <div class="option-body pt-0">
                                        <div class="datatable datatable-bordered datatable-head-custom" id="t-unpaid"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-xl-12">
                            <div class="option mb-0">
                                <div class="option-label">
                                    <div class="option-body pt-0">
                                        <div class="row">
                                            <div class="col-xl-12">
                                                <h6 class="font-size-sm text-dark mb-4">ALINAN TUTAR</h6>
                                                <input type="text" name="Amount" class="form-control" id="d-amount" maxlength="22" placeholder="0,00">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                         
                    </div>

                </form>

            </div>
            <div class="modal-footer">
                <button type="button" id="button-payment" class="btn btn-primary font-weight-bold">Öde</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal-housing-movement" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="staticBackdrop" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-expense-title">BORÇ HAREKETLERİ</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i aria-hidden="true" class="ki ki-close"></i>
                </button>
            </div>
            <div class="modal-body">

                <div class="row">
                    <div class="col-xl-4">
                        <div class="option mb-4">
                            <div class="option-label">
                                <span class="option-head">
                                    <span class="option-title">
                                        GÜNCEL KASA TUTARI
                                    </span>
                                </span>
                                <div class="option-body mt-3">
                                    <h3 id="widget-housing-safe-amount" class="font-size-lg text-dark-65 mb-0">0,00</h3>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-4">
                        <div class="option mb-4">
                            <div class="option-label">
                                <span class="option-head">
                                    <span class="option-title">ÖDENECEK TUTARI</span>
                                </span>
                                <div class="option-body mt-3">
                                    <h3 id="widget-housing-debit-amount" class="font-size-lg text-dark-65 mb-0">0,00</h3>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-4">
                        <div class="option mb-4">
                            <div class="option-label">
                                <span class="option-head">
                                    <span class="option-title">AY/YIL</span>
                                </span>
                                <div class="option-body mt-3">
                                    <h3 id="widget-housing-month-year" class="font-size-lg text-dark-65 mb-0">0/0000</h3>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xl-12">
                        <div class="option mb-0">
                            <div class="option-label">
                                <div class="option-body pt-0">
                                    <div class="datatable datatable-bordered datatable-head-custom" id="t-housing-movement"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>


@section Scripts {

    <script type="text/javascript">

        var _date = new Date();

        // Query Component Selector
        const qcs = {
            default: [
                {
                    month: _date.getMonth() + 1,
                    year: _date.getFullYear(),
                }
            ],
            // table: "#t-debits",
            table: {
                debits: "#t-debits",
                unpaid: "#t-unpaid",
                housing_movement: '#t-housing-movement'
            },
            input: {
                debit_id: "[name='DebitId']",
                housing_id: "[name='HousingId']",
                debit_amount: "[name='Amount']",
            },
            label: {
                apartment_month_year: '#label-apartment-month-year',
                housing_the_housing_user: '#label-housing-the-housing-user',
                housing_safe_amount: '#label-housing-safe-amount',
                debit_amount: '#label-debit-amount',
            },
            widget: {
                housing_safe_amount: '#widget-housing-safe-amount',
                housing_debit_amount: '#widget-housing-debit-amount',
                housing_month_year: '#widget-housing-month-year',
            },
            combo: {
                debit_months: '#combo-debit-months',
                debit_years: '#combo-debit-years',
                debit_apartments: '#combo-debit-apartments',
                filter: {
                    apartments: '#combo-filter-apartments',
                    months: '#combo-filter-months',
                    years: '#combo-filter-years',
                    paid: '#combo-filter-paid',
                }
            },
            modal: {
                payment: '#modal-payment',
                payment_open: '.modal-payment-open',
                debit: '#modal-debit',
                debit_open: '#modal-debit-open',
                housing_movement: '#modal-housing-movement',
                housing_movement_open: '.modal-housing-movement-open',
            }
        }

        var Masks = function () {
            var Mask = function () {
                $('#d-amount').mask("#.##0,00", {
                    reverse: true
                });
            }
            return {
                Init: function () {
                    Mask();
                }
            };
        }();

        function debits() {

            var debit = [];
 
            $(qcs.table.unpaid).on('datatable-on-init', function () {
               
            }).on('datatable-on-check', function (e, args) {
                
                // console.log('OnCheck: ' + args.toString());

                console.log("ADD ------------------------------");
                debit = args;
                console.log(debit);
                console.log("---------------------------------------");


            }).on('datatable-on-uncheck', function (e, args) {
                 
                console.log("REMOVE ------------------------------"); 

                // console.log('UnCheck: ' + args.toString());
                 
                $.each(args, function (index, value) {
                    debit = debit.filter(item => item !== value);
                });
               
                console.log("KALANLAR : ------ ");
                console.log(debit);

                console.log("------------------------------------------");

            });







            $(document).on("click", qcs.modal.housing_movement_open, function () {

                $(qcs.modal.housing_movement).modal();

                var filter = {
                    housing_id: $(this).data("housing-id"),
                    month: $(qcs.combo.filter.months).val(),
                    year: $(qcs.combo.filter.years).val(),
                    debit_amount: $(this).data("debit-amount"),
                }
                console.log(filter);

                $(qcs.widget.housing_debit_amount).text(filter.debit_amount);
                $(qcs.widget.housing_month_year).text(filter.month + "/" + filter.year);

                g_housing_safe(filter.housing_id);

                l_housing_movement(filter.housing_id, filter.month, filter.year);


            });

            // APARTMENT FILTER
            $(document).on("change", qcs.combo.filter.apartments, function () {

                var filter = {
                    apartment_id: $(this).val(),
                    month: $(qcs.combo.filter.months).val(),
                    year: $(qcs.combo.filter.years).val(),
                }

                sessionStorage.setItem("_apartment", filter.apartment_id);
                sessionStorage.setItem("_month", filter.month);
                sessionStorage.setItem("_year", filter.year);

                $(qcs.combo.filter.apartments).children('option').removeAttr('selected');
                $(qcs.combo.filter.apartments).find('option[value=' + filter.apartment_id + ']').attr('selected', 'selected');

                l_debits(filter.apartment_id, filter.month, filter.year);

            });

            // MONTH FILTER
            $(document).on("change", qcs.combo.filter.months, function () {

                var filter = {
                    apartment_id: $(qcs.combo.filter.apartments).val(),
                    month: $(this).val(),
                    year: $(qcs.combo.filter.years).val(),
                }

                sessionStorage.setItem("_apartment", filter.apartment_id);
                sessionStorage.setItem("_month", filter.month);
                sessionStorage.setItem("_year", filter.year);

                $(qcs.combo.filter.months).children('option').removeAttr('selected');
                $(qcs.combo.filter.months).find('option[value=' + filter.month + ']').attr('selected', 'selected');

                l_debits(filter.apartment_id, filter.month, filter.year);

            });

            // YEAR FILTER
            $(document).on("change", qcs.combo.filter.years, function () {

                var filter = {
                    apartment_id: $(qcs.combo.filter.apartments).val(),
                    month: $(qcs.combo.filter.months).val(),
                    year: $(this).val(),
                }

                sessionStorage.setItem("_apartment", filter.apartment_id);
                sessionStorage.setItem("_month", filter.month);
                sessionStorage.setItem("_year", filter.year);

                $(qcs.combo.filter.years).children('option').removeAttr('selected');
                $(qcs.combo.filter.years).find('option[value=' + filter.year + ']').attr('selected', 'selected');

                l_debits(filter.apartment_id, filter.month, filter.year);

            });

            // PAYMENT MODAL OPEN
            $(document).on("click", qcs.modal.payment_open, function () {

                $(qcs.modal.payment).modal();

                var filter = {
                    apartment_id: $(qcs.combo.filter.apartments).val(),
                    apartment_title: $(qcs.combo.filter.apartments + " option:selected").text(),
                    month: $(qcs.combo.filter.months).val(),
                    year: $(qcs.combo.filter.years).val(),
                    housing: $(this).data("housing"),
                    housing_user: $(this).data("housing-user"),
                    housing_id: $(this).data("housing-id"),
                    debit_id: $(this).data("debit-id"),
                    debit_amount: $(this).data("debit-amount"),
                }

                $(qcs.input.debit_id).val(filter.debit_id);
                $(qcs.input.housing_id).val(filter.housing_id);

                $(qcs.label.apartment_month_year).text(filter.apartment_title + " - " + filter.month + "." + filter.year);
                $(qcs.label.housing_the_housing_user).text(filter.housing + " - " + filter.housing_user);

                $(qcs.label.debit_amount).text(filter.debit_amount);

                g_housing_safe(filter.housing_id);
                l_unpaids(filter.housing_id);

                console.log(filter);

                fv.resetForm("form-payment");
                button_payment.innerHTML = "Kaydet";

            });


            $(document).on("click", qcs.modal.debit_open, function () {
                $(qcs.modal.debit).modal(); 
            });

            const form_payment = document.getElementById('form-payment');
            const button_payment = document.getElementById('button-payment');

            const fv = FormValidation.formValidation(form_payment, {

                fields: {

                    Amount: {
                        validators: {
                            notEmpty: {
                                message: 'Tutar alanı boş geçilemez.'
                            },
                            stringLength: {
                                min: 1,
                                message: 'Tutar minimum 1 olmalıdır'
                            }
                        }
                    },

                },
                plugins: {
                    trigger: new FormValidation.plugins.Trigger(),
                    bootstrap: new FormValidation.plugins.Bootstrap(),
                },
            }).on('core.form.validating', function () {
                button_payment.innerHTML = 'Doğrulanıyor ...';
            });

            // -----
            button_payment.addEventListener('click', function () {

                fv.validate().then(function (status) {

                    button_payment.innerHTML = status === 'Valid' ? 'Güncelleniyor...' : 'Lütfen tekrar deneyin';

                    switch (status) {
                        case "Valid":

                            var dm = {
                                DebitId: $(qcs.input.debit_id).val(),
                                HousingId: $(qcs.input.housing_id).val(),
                                ApartmentId: $(qcs.combo.filter.apartments).val(),
                                Month: $(qcs.combo.filter.months).val(),
                                Year: $(qcs.combo.filter.years).val(),
                                Amount: $(qcs.input.debit_amount).val()
                            }
                            console.log(dm);


                            $.post("/ams/app/debit/pay", dm, function (d) {

                                console.log(d);

                                if (d.isSucceed) {
                                    switch (d.statuses) {
                                        case 'x-pay':

                                            Swal.fire({
                                                title: "Ödeme",
                                                text: "Ödeme için teşekkürler.",
                                                icon: "success",
                                                timer: 4000,
                                                onOpen: function () { Swal.showLoading() },
                                                allowOutsideClick: false,
                                                allowEscapeKey: false,
                                                buttonsStyling: false,
                                                confirmButtonText: "<i class='la la-headphones'></i> I am game!",
                                                showCancelButton: false,
                                                cancelButtonText: "<i class='la la-thumbs-down'></i> No, thanks",
                                                customClass: {
                                                    confirmButton: "btn btn-danger",
                                                    cancelButton: "btn btn-default"
                                                }
                                            }).then(function (r) {

                                                if (r.dismiss === "timer") {
                                                    $(qcs.modal.payment).modal('hide');
                                                    l_debits(dm.ApartmentId, dm.Month, dm.Year);
                                                }

                                            });

                                            break;
                                    }
                                }


                            }).done(function () {

                            }).fail(function (jqXHR, textStatus, errorThrown) {

                            }).always(function () {

                            });

                            break;
                    }

                });

            });

        }




        function combo_apartments() {

            $.ajax({
                type: 'GET',
                url: "/ams/app/combo-apartments",
                async: false,
                dataType: 'json',
                success: function (data) {

                    $.each(data, function (i, v) {

                        if (i == 0) {
                            $(qcs.combo.filter.apartments).append('<option value=' + v.id + ' selected="selected">' + v.apartmentName + '</option>');
                        } else {
                            $(qcs.combo.filter.apartments).append('<option value=' + v.id + '>' + v.apartmentName + '</option>');
                        }

                        // $(qcs.combo.expense_apartments).append($("<option selected='selected'></option>").val(v.id).html(v.apartmentName));

                    });

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log('Could not get posts, server response: ' + textStatus + ': ' + errorThrown);
                }
            });

        }

        function g_housing_safe(housing_id) {

            $.get("/ams/app/housing-safe/" + housing_id, function (d) {

                console.log(d);

                if (d.isSucceed) {
                    switch (d.statuses) {
                        case 'x-detail':
                            $(qcs.label.housing_safe_amount).text(d.view._Amount);
                            $(qcs.widget.housing_safe_amount).text(d.view._Amount);
                            break;
                        case 'x-ndata':
                            $(qcs.label.housing_safe_amount).text(d.view._Amount);
                            $(qcs.widget.housing_safe_amount).text(d.view._Amount);
                            break;
                        case 'x-fail':

                            Swal.fire({
                                title: "Hata",
                                text: "İstenmeyen bir hata oluştu.",
                                icon: "error",
                                timer: 4000,
                                onOpen: function () {
                                    Swal.showLoading()
                                },
                                allowOutsideClick: false,
                                allowEscapeKey: false,
                                buttonsStyling: false,
                                confirmButtonText: "<i class='la la-headphones'></i> I am game!",
                                showCancelButton: false,
                                cancelButtonText: "<i class='la la-thumbs-down'></i> No, thanks",
                                customClass: {
                                    confirmButton: "btn btn-danger",
                                    cancelButton: "btn btn-default"
                                }
                            }).then(function (r) {
                                if (r.dismiss === "timer") {
                                    $(qcs.modal.payment).modal('hide');
                                }
                            });

                            break;
                    }
                }




            }).done(function (d) {

            }).fail(function (jqXHR, textStatus, errorThrown) {

                Swal.fire({
                    title: "Hata",
                    text: "Hata Kodu : " + textStatus,
                    icon: "error",
                    timer: 4000,
                    onOpen: function () {
                        Swal.showLoading()
                    },
                    allowOutsideClick: false,
                    allowEscapeKey: false,
                    buttonsStyling: false,
                    confirmButtonText: "<i class='la la-headphones'></i> I am game!",
                    showCancelButton: false,
                    cancelButtonText: "<i class='la la-thumbs-down'></i> No, thanks",
                    customClass: {
                        confirmButton: "btn btn-danger",
                        cancelButton: "btn btn-default"
                    }
                }).then(function (r) {

                    if (r.dismiss === "timer") { }

                });

            }).always(function (d) {

            });

        }

        function l_debits(apartment_id, month, year) {

            var list = [];

            $(qcs.table.debits).KTDatatable('destroy');

            var ds = $.ajax({
                type: 'GET',
                url: '/ams/app/debits/' + apartment_id + '/' + month + '/' + year,
                async: false,
                dataType: 'json',
                done: function (data) {
                    return data;
                },
                fail: function (jqXHR, textStatus, errorThrown) {
                    console.log('Could not get posts, server response: ' + textStatus + ': ' + errorThrown);
                }
            }).responseJSON;

            // console.table(ds);
            console.log(ds.listView);

            if (ds.isSucceed) {
                switch (ds.statuses) {
                    case 'x-list':
                        list = ds.listView;
                        break;
                }
            }

            var datatable = $(qcs.table.debits).KTDatatable({
                data: {
                    source: list,
                    pageSize: 10,
                },
                layout: {
                    scroll: true,
                    footer: false,
                },
                sortable: true,
                pagination: true,
                search: {
                    input: $('#kt_datatable_search_query'),
                    key: 'generalSearch',
                },
                columns: [
                    {
                        field: 'apartmentId',
                        title: '#',
                        sortable: false,
                        width: 20,
                        type: 'number',
                        selector: true,
                        textAlign: 'center',
                    },
                    {
                        field: 'housingName',
                        title: 'Konut / Konut Sahibi',
                        width: 200,
                    },
                    {
                        field: '_CreateTime',
                        title: 'Kayıt Tarihi',
                        type: 'date',
                        // format: 'MM/DD/YYYY',
                    },
                    {
                        field: 'createUser',
                        title: 'Oluşturan',
                    },
                    {
                        field: 'Month',
                        title: 'Ay/Yıl',
                        template: function (row) {
                            return row._Month + '/' + row._Year;
                        },
                    },
                    {
                        field: 'Amount',
                        title: 'Tutar',
                        template: function (row) {
                            return row._Amount;
                        },
                    },
                    {
                        field: 'isActive',
                        title: 'Durum',
                        visible: false,
                        template: function (row) {
                            var status = {
                                1: {
                                    'title': 'Aktif',
                                    'class': ' label-light-success',
                                },
                                2: {
                                    'title': 'Pasif',
                                    'class': ' label-light-danger',
                                },
                            };
                            return '<span class="label font-weight-bold label-lg ' + status[row.isActive].class + ' label-inline">' + status[row.isActive].title + '</span>';
                        },
                    },
                    {
                        field: 'paid',
                        title: 'Ödeme',
                        template: function (row) {
                            var status = {
                                1: {
                                    'title': 'Ödendi',
                                    'class': ' label-light-success',
                                },
                                2: {
                                    'title': 'Öde',
                                    'class': ' label-light-danger cursor-pointer modal-payment-open',
                                },
                            };

                            var r = null;

                            switch (row.paid) {
                                case 1: // ÖDENDİ
                                    r = '<span class="label font-weight-bold label-lg label-inline label-light-success">' + 'Ödendi' + '</span>';
                                    break;
                                case 2:
                                    r = '<span class="label font-weight-bold label-lg label-inline label-light-danger cursor-pointer modal-payment-open" data-housing="' + row._Housing + '" data-housing-user="' + row.housingUser + '" data-housing-id="' + row.housingId + '" data-debit-id="' + row.id + '" data-debit-amount="' + row._Amount + '">' + 'Öde' + '</span>';
                                    break;
                            }

                            return r;
                            // return '<span class="label font-weight-bold label-lg ' + status[row.paid].class + ' label-inline" data-housing="' + row._Housing + '" data-housing-user="' + row.housingUser + '">' + status[row.paid].title + '</span>';


                        },
                    },
                    {
                        field: 'Actions',
                        title: 'İşlem',
                        sortable: false,
                        width: 125,
                        overflow: 'visible',
                        autoHide: false,
                        template: function (row) {

                            var r = `
                            <a href="javascript:;" class="btn btn-sm btn-clean btn-icon modal-housing-movement-open" data-housing-id='${row.housingId}' data-debit-month="${row._Month}" data-debit-year="${row._Year}" data-debit-amount="${row._Amount}" data-toggle="tooltip"><i class="la la-bars"></i>
                            </a>
                            `;

                            return r;

                        },
                    }],
            });

            $(qcs.combo.filter.paid).on('change', function (e) {
                // console.log(e.target.value);
                var paid = $(this).val().toLowerCase();
                datatable.search(paid, 'paid');
            });

        }

        function l_housing_movement(housing_id, month, year) {

            var list = [];

            $(qcs.table.housing_movement).KTDatatable('destroy');

            var ds = $.ajax({
                type: 'GET',
                url: '/ams/app/housing-safe-movement/' + housing_id + '/' + month + '/' + year,
                async: false,
                dataType: 'json',
                done: function (data) {
                    return data;
                },
                fail: function (jqXHR, textStatus, errorThrown) {
                    console.log('Could not get posts, server response: ' + textStatus + ': ' + errorThrown);
                }
            }).responseJSON;

            // console.table(ds);
            console.log(ds.listView);

            if (ds.isSucceed) {
                switch (ds.statuses) {
                    case 'x-list':
                        list = ds.listView;
                        break;
                }
            }

            var datatable = $(qcs.table.housing_movement).KTDatatable({
                data: {
                    source: list,
                    pageSize: 10,
                },
                layout: {
                    scroll: true,
                    footer: false,
                },
                sortable: true,
                pagination: true,
                // search: {
                //     input: $('#kt_datatable_search_query'),
                //     key: 'generalSearch',
                // },
                columns: [
                    // {
                    //     field: 'housingSafeAmount',
                    //     title: 'Güncel Kasa',
                    // },
                    {
                        field: 'formerAmount',
                        title: 'Eski Kasa T.',
                        textAlign: 'left',
                    },
                    {
                        field: 'movementAmount',
                        title: 'Harekat T.',
                        textAlign: 'left',
                    },
                    {
                        field: 'debitAmount',
                        title: 'Ödenecek T.',
                        textAlign: 'left',
                    },
                    // {
                    //     field: 'monthYear',
                    //     title: 'Ay/Yıl',
                    //     textAlign: 'left',
                    // },
                    {
                        field: '_CreateTime',
                        title: 'Kayıt Tarihi',
                        textAlign: 'left',
                    },
                    {
                        field: 'createUser',
                        title: 'Oluşturan',
                        textAlign: 'left',
                    },

                    ],
            });

            // $(qcs.combo.filter.paid).on('change', function (e) {
            //     // console.log(e.target.value);
            //     var paid = $(this).val().toLowerCase();
            //     datatable.search(paid, 'paid');
            // });

        }

        function l_unpaids(housing_id) {

            var list = [];

            $(qcs.table.unpaid).KTDatatable('destroy');

            var ds = $.ajax({
                type: 'GET',
                url: '/ams/app/debit/unpaid/' + housing_id,
                async: false,
                dataType: 'json',
                done: function (data) {
                    return data;
                },
                fail: function (jqXHR, textStatus, errorThrown) {
                    console.log('Could not get posts, server response: ' + textStatus + ': ' + errorThrown);
                }
            }).responseJSON;

            // console.table(ds);
            console.log(ds.listView);

            if (ds.isSucceed) {
                switch (ds.statuses) {
                    case 'x-list':
                        list = ds.listView;
                        break;
                }
            }

            var datatable = $(qcs.table.unpaid).KTDatatable({
                data: {
                    source: list,
                    pageSize: 10,
                },
                layout: {
                    scroll: true,
                    footer: false,
                },
                sortable: true,
                pagination: false,
                search: {
                    input: $('#kt_datatable_search_query'),
                    key: 'generalSearch',
                },
                columns: [
                    {
                        field: 'id',
                        title: '#',
                        sortable: false,
                        width: 1,
                        // type: 'number',
                        selector: true,
                        textAlign: 'center',
                    },
                    {
                        field: 'Month',
                        title: 'Ay/Yıl',
                        textAlign: 'left',
                        template: function (row) {
                            return row._Month + '/' + row._Year;
                        },
                    },
                    {
                        field: 'Amount',
                        title: 'Tutar',
                        textAlign: 'left',
                        template: function (row) {
                            return row._Amount;
                        },
                    }],
            });

            $(qcs.combo.filter.paid).on('change', function (e) {
                // console.log(e.target.value);
                var paid = $(this).val().toLowerCase();
                datatable.search(paid, 'paid');
            });

        }

        $(function () {

            combo_apartments();

            var filter = {
                apartment_id: $(qcs.combo.filter.apartments).val(),
                month: $(qcs.combo.filter.months).val(),
                year: $(qcs.combo.filter.years).val(),
            }

            debits();

            var sessions = {
                apartment: sessionStorage.getItem("_apartment"),
                month: sessionStorage.getItem("_month"),
                year: sessionStorage.getItem("_year")
            }

            if (sessions.month != null && sessions.year != null) {
                $(qcs.combo.filter.apartments).find('option[value=' + sessions.apartment + ']').attr('selected', 'selected');
                $(qcs.combo.filter.months).find('option[value=' + sessions.month + ']').attr('selected', 'selected');
                $(qcs.combo.filter.years).find('option[value=' + sessions.year + ']').attr('selected', 'selected');
                l_debits(sessions.apartment, sessions.month, sessions.year);
            }
            else {
                $(qcs.combo.filter.months).find('option[value=' + qcs.default[0].month + ']').attr('selected', 'selected');
                $(qcs.combo.filter.years).find('option[value=' + qcs.default[0].year + ']').attr('selected', 'selected');
                sessionStorage.setItem("_apartment", filter.apartment_id);
                sessionStorage.setItem("_month", qcs.default[0].month);
                sessionStorage.setItem("_year", qcs.default[0].year);
                l_debits(filter.apartment_id, qcs.default[0].month, qcs.default[0].year);
            }

            $(qcs.table.debits).tooltip({
                selector: '[data-toggle=tooltip]',
                container: 'body'
            });
            Masks.Init();











        });

    </script>

}                                                