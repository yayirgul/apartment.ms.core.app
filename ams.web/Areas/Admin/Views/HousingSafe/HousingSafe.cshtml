@{
    ViewData["Title"] = "Konut Kasası";
}

@section Subheader {
    <div class="subheader py-2 py-lg-4 subheader-solid" id="kt_subheader">
        <div class="container-fluid d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
            <!--begin::Info-->
            <div class="d-flex align-items-center flex-wrap mr-2">
                <h5 class="text-dark font-weight-bold mt-2 mb-2 mr-5">Konut Kasası</h5>
                <div class="subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 bg-gray-200"></div>
                <span class="text-muted font-weight-bold mr-4">#XRS-45670</span>
            </div>
            <!--end::Info-->
            <!--begin::Toolbar-->
            <div class="d-flex align-items-center">
            </div>
            <!--end::Toolbar-->
        </div>
    </div>
}

<div class="container-fluid">
    <div class="row">
        <div class="col-xl-12">
            <div class="card card-custom">
                <div class="card-header">
                    <div class="card-title">
                        <span class="card-icon">
                            <i class="far fa-building text-primary"></i>
                        </span>
                        <h3 class="card-label">Konut Kasası</h3>
                    </div>
                    <div class="card-toolbar">

                        <a href="javascript:;" id="modal-housing-new" class="btn btn-primary font-weight-bolder">
                            Yeni Kasa
                        </a>
                    </div>
                </div>
                <div class="card-body">

                    <div class="mb-7">
                        <div class="row align-items-center">
                            <div class="col-lg-12 col-xl-12">
                                <div class="row align-items-center">

                                    <div class="col-md-2 my-2 my-md-0">
                                        <div class="d-flex align-items-center">
                                            <select class="form-control" id="combo-filter-apartments">
                                                @* <option value="">Tümü</option> *@
                                            </select>
                                        </div>
                                    </div>

                                    <div class="col-md-1 my-2 my-md-0">
                                        <div class="d-flex align-items-center">
                                            <select class="form-control" id="combof-status">
                                                <option value="" selected="selected">Tümü</option>
                                                <option value="1">Aktif</option>
                                                <option value="2">Pasif</option>
                                            </select>
                                        </div>
                                    </div>

                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="datatable datatable-bordered datatable-head-custom" id="t-housing-safe"></div>

                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script src="~/lib/theme/plugins/custom/datatables/datatables.bundle.js"></script>

    <script type="text/javascript">

        var _date = new Date();

        // Query Component Selector
        const qcs = {
            default: [
                {
                    month: _date.getMonth() + 1,
                    year: _date.getFullYear(),
                }
            ],
            table: "#t-housing-safe",
            input: {
                housing_id: "[name='HousingId']",
                housing_name: "[name='HousingName']",
                housing_no: "[name='HousingNo']",
                housing_safe_amount: "[name='HousingSafeAmount']"
            },
            select: {
                users: "select[name='Users']",
                apartments: "select[name='Apartments']"
            },
            combo: {
                apartments: '#combo-apartments',
                users: '#combo-users',
                filter: {
                    apartments: '#combo-filter-apartments',
                }
            },
            modal: {
                housing: '#modal-housing',
                housing_new: '#modal-housing-new',
                housing_edit: '.modal-housing-edit',
                housing_safe: '#modal-housing-safe',
                housing_safe_open: '.modal-housing-safe-open',
            },
            label: {
                apartment: '#label-apartment',
                housing: '#label-housing',
                housing_user: '#label-housing-user',
            },
        }

        function housing_safes() {

            $(document).on("change", qcs.combo.filter.apartments, function () {

                var filter = { apartment_id: $(this).val() }

                sessionStorage.setItem("_apartment", filter.apartment_id);

                $(qcs.combo.filter.apartments).children('option').removeAttr('selected');
                $(qcs.combo.filter.apartments).find('option[value=' + filter.apartment_id + ']').attr('selected', 'selected');

                l_housing_safes(filter.apartment_id);

            });

        }

        function combo_apartments() {

            $.ajax({
                type: 'GET',
                url: "/ams/app/combo-apartments",
                async: false,
                dataType: 'json',
                success: function (data) {

                    $.each(data, function (i, v) {

                        if (i == 0) {
                            $(qcs.combo.filter.apartments).append('<option value=' + v.id + ' selected="selected">' + v.apartmentName + '</option>');
                            $(qcs.combo.apartments).append('<option value=' + v.id + ' selected="selected">' + v.apartmentName + '</option>');
                        } else {
                            $(qcs.combo.filter.apartments).append('<option value=' + v.id + '>' + v.apartmentName + '</option>');
                            $(qcs.combo.apartments).append('<option value=' + v.id + '>' + v.apartmentName + '</option>');
                        }

                    });

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log('Could not get posts, server response: ' + textStatus + ': ' + errorThrown);
                }
            });

        }

        function g_housing_safe(housing_id) {

            $.get("/ams/app/housing-safe/" + housing_id, function (d) {

                console.log(d);

                if (d.isSucceed) {
                    switch (d.statuses) {
                        case 'x-detail':

                            $(qcs.input.housing_safe_amount).val(d.view._Amount);

                            // $(qcs.label.housing_safe_amount).text(d.view._Amount);

                            break;
                        case 'x-ndata':
                            // $(qcs.label.housing_safe_amount).text(d.view._Amount);
                            break;
                        case 'x-fail':

                            Swal.fire({
                                title: "Hata",
                                text: "İstenmeyen bir hata oluştu.",
                                icon: "error",
                                timer: 4000,
                                onOpen: function () { Swal.showLoading() },
                                allowOutsideClick: false,
                                allowEscapeKey: false,
                                buttonsStyling: false,
                                confirmButtonText: "<i class='la la-headphones'></i> I am game!",
                                showCancelButton: false,
                                cancelButtonText: "<i class='la la-thumbs-down'></i> No, thanks",
                                customClass: {
                                    confirmButton: "btn btn-danger",
                                    cancelButton: "btn btn-default"
                                }
                            }).then(function (r) {
                                if (r.dismiss === "timer") {
                                    $(qcs.modal.payment).modal('hide');
                                }
                            });

                            break;
                    }
                }

            }).done(function (d) {

            }).fail(function (jqXHR, textStatus, errorThrown) {

                Swal.fire({
                    title: "Hata",
                    text: "Hata Kodu : " + textStatus,
                    icon: "error",
                    timer: 4000,
                    onOpen: function () {
                        Swal.showLoading()
                    },
                    allowOutsideClick: false,
                    allowEscapeKey: false,
                    buttonsStyling: false,
                    confirmButtonText: "<i class='la la-headphones'></i> I am game!",
                    showCancelButton: false,
                    cancelButtonText: "<i class='la la-thumbs-down'></i> No, thanks",
                    customClass: {
                        confirmButton: "btn btn-danger",
                        cancelButton: "btn btn-default"
                    }
                }).then(function (r) {

                    if (r.dismiss === "timer") { }

                });

            }).always(function (d) {

            });

        }

        function l_housing_safes(apartment_id) {

            var list = [];

            $(qcs.table).KTDatatable('destroy');

            var ds = $.ajax({
                type: 'GET',
                url: '/ams/app/housing-safes/' + apartment_id,
                async: false,
                dataType: 'json',
                done: function (data) {
                    return data;
                },
                fail: function (jqXHR, textStatus, errorThrown) {
                    console.log('Could not get posts, server response: ' + textStatus + ': ' + errorThrown);
                }
            }).responseJSON;

            if (ds.isSucceed) {
                switch (ds.statuses) {
                    case 'x-list':
                        list = ds.listView;
                        break;
                }
            }

            console.table(ds);


            var datatable = $(qcs.table).KTDatatable({
                // datasource definition
                data: {
                    // type: 'local',
                    // source: dataJSONArray,
                    source: list,
                    pageSize: 10,
                },

                // layout definition
                layout: {
                    scroll: false, // enable/disable datatable scroll both horizontal and vertical when needed.
                    // height: 450, // datatable's body's fixed height
                    footer: false, // display/hide footer
                },
                // column sorting
                sortable: true,
                pagination: true,
                search: {
                    input: $('#kt_datatable_search_query'),
                    key: 'generalSearch',
                },

                // columns definition
                columns: [
                    {
                        field: 'apartmentId',
                        title: '#',
                        sortable: false,
                        width: 20,
                        type: 'number',
                        selector: true,
                        textAlign: 'center',
                    },
                    {
                        field: 'housingName',
                        title: 'Konut',
                        template: function (row) {

                            var status = {
                                1: { 'class': ' label-success' },
                                2: { 'class': ' label-danger' },
                            };

                            return `
                                    <div class='d-flex align-items-center'>
                                     <b class='mr-3'>${row.housingName}</b>
                                     <span class="label label-xl label-dot ${status[row.isActive].class}"></span>
                                    </div>
                            `;

                        },
                    },
                    {
                        field: 'housingUser',
                        title: 'Konut Sahibi',
                    },
                    {
                        field: '_CreateTime',
                        title: 'Kayıt Tarihi',
                        type: 'date',
                        // format: 'MM/DD/YYYY',
                    },
                    {
                        field: '_ModifiedTime',
                        title: 'Güncellenme Tarihi',
                    },
                    // {
                    //     field: 'createUser',
                    //     title: 'Oluşturan',
                    // },
                    {
                        field: 'Amount',
                        title: 'Kasa Tutarı',
                        template: function (row) {
                            //return row._Amount;
                            //return '<a href="#" class="btn btn-sm btn-outline-primary d-flex"><b>' + row._Amount + '</b> <i class="flaticon-edit"></i> </a>';

                            return `
                                    <div class='d-flex align-items-center'>
                                     <b class='mr-3'>${row._Amount}</b>
                                    </div>
                            `;

                        },
                    },
                    {
                        field: 'Actions',
                        title: 'İşlem',
                        sortable: false,
                        width: 125,
                        overflow: 'visible',
                        autoHide: false,
                        template: function (row) {

                            return '\
                                     <a href="javascript:;" class="btn btn-sm btn-clean btn-icon modal-housing-edit" data-housing-id=' + row.id + ' data-toggle="tooltip" data-theme="dark" title="Edit">\
                                      <i class="flaticon-edit"></i>\
                                     </a>\
                                         \
                                     ';



                        },
                    }],
            });

            $('#combof-status').on('change', function (e) {

                // console.log(e.target.value);
                // console.log($(this).val().toLowerCase());

                var status = $(this).val().toLowerCase();
                datatable.search(status, 'isActive');

            });

            $('#combof-months').on('change', function (e) {



            });






            // $('#kt_datatable_search_type').on('change', function () {
            //     datatable.search($(this).val().toLowerCase(), 'Type');
            // });

            // $('#kt_datatable_search_status, #kt_datatable_search_type').selectpicker();


            $('#kt_subheader').on('click', function (e) {

                e.preventDefault();

                $('.datatable-input').each(function () {
                    $(this).val('');
                    datatable.column($(this).data('col-index')).search('', false, false);
                });
                datatable.table().draw();
            });


        }


        $(function () {

            combo_apartments();

            $(qcs.combo.filter.months).find('option[value=' + qcs.default[0].month + ']').attr('selected', 'selected');

            var filter = {
                apartment_id: $(qcs.combo.filter.apartments).val(),
            }

            var sessions = {
                apartment: sessionStorage.getItem("_apartment"),
                month: sessionStorage.getItem("_month"),
                year: sessionStorage.getItem("_year")
            }

            if (sessions.apartment != null) {
                $(qcs.combo.filter.apartments).find('option[value=' + sessions.apartment + ']').attr('selected', 'selected');
                l_housing_safes(sessions.apartment);
            }
            else {
                l_housing_safes(filter.apartment_id);
            }

            housing_safes();

            combo_users(filter.apartment_id);

            $(qcs.table).tooltip({
                selector: '[data-toggle=tooltip]',
                container: 'body'
            });

        });

    </script>

}