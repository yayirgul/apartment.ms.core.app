@{
    ViewData["Title"] = "Apartmanlar";
}

@section Subheader {
    <div class="subheader py-2 py-lg-4 subheader-solid" id="kt_subheader">
        <div class="container-fluid d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
            <!--begin::Info-->
            <div class="d-flex align-items-center flex-wrap mr-2">
                <h5 class="text-dark font-weight-bold mt-2 mb-2 mr-5">Apartmanlar</h5>
                <div class="subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 bg-gray-200"></div>
                <span class="text-muted font-weight-bold mr-4">#XRS-45670</span>
            </div>
            <!--end::Info-->
            <!--begin::Toolbar-->
            <div class="d-flex align-items-center">
            </div>
            <!--end::Toolbar-->
        </div>
    </div>
}

<div class="container-fluid">
    <div class="row">
        <div class="col-xl-12">
            <div class="card card-custom">
                <div class="card-header">
                    <div class="card-title">
                        <span class="card-icon">
                            <i class="far fa-building text-primary"></i>
                        </span>
                        <h3 class="card-label">Apartmanlar</h3>
                    </div>
                    <div class="card-toolbar">
                        <a href="javascript:;" id="modal-apartment-open" class="btn btn-primary font-weight-bolder">Yeni</a>
                    </div>
                </div>
                <div class="card-body">

                    <!--begin::Search Form-->
                    <div class="mb-7">
                        <div class="row align-items-center">
                            <div class="col-xl-12">
                                <div class="row align-items-center">

                                    <div class="col-md-2 my-2 my-md-0">
                                        <div class="input-icon">
                                            <input type="text" class="form-control" placeholder="Search..." id="kt_datatable_search_query" />
                                            <span>
                                                <i class="flaticon2-search-1 text-muted"></i>
                                            </span>
                                        </div>
                                    </div>

                                    <div class="col-md-1 my-2 my-md-0">
                                        <div class="d-flex align-items-center">
                                            <select class="form-control" id="kt_datatable_search_status">
                                                <option value="">Tümü</option>
                                                <option value="1">Aktif</option>
                                                <option value="2">Pasif</option>
                                            </select>
                                        </div>
                                    </div>

                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="datatable datatable-bordered datatable-head-custom" id="t_apartments"></div>

                </div>
            </div>

        </div>
    </div>
</div>

<div class="modal fade" id="modal-apartment" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="staticBackdrop" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-apartment-title">Yeni Apartman</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i aria-hidden="true" class="ki ki-close"></i>
                </button>
            </div>
            <div class="modal-body">

                <form class="form" id="form-apartment">

                    <div class="form-group mb-0 row">

                        <input type="hidden" name="ApartmentId" />

                        <div class="col-xl-12">
                            <label>* Apartman Adı</label>
                            <input type="text" name="ApartmentName" class="form-control" placeholder="">
                        </div>

                    </div>

                </form>

            </div>
            <div class="modal-footer">
                <button type="button" id="button-apartment" class="btn btn-primary font-weight-bold">Kaydet</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script src="~/lib/theme/plugins/custom/datatables/datatables.bundle.js"></script>

    <script type="text/javascript">
         
        var app = app || {}
        app.Urls = app.Urls || {} 
        // app.Urls.ApartmentList = "@(Url.Action("Apt", "Apartment"))";

        // Query Component Selector
        const qcs = {
            table: "#t_apartments",
            input: {
                apartment_id: "[name='ApartmentId']",
                apartment_name: "[name='ApartmentName']",
            },
            modal: {
                apartment: '#modal-apartment',
                apartment_open: '#modal-apartment-open',
                apartment_edit: '.modal-apartment-edit',
            }
        }

        function apartments() {

            $(document).on("click", qcs.modal.apartment_open, function () {
                $(qcs.modal.apartment).modal();
                fv.resetForm("form-apartment");
                button_apartment.innerHTML = "Kaydet";
                $(qcs.input.apartment_id).removeAttr("value");
            });

            $(document).on("click", qcs.modal.apartment_edit, function () {
                $(qcs.modal.apartment).modal();

                var q = {
                    apartment_id: $(this).data('apartment-id'),
                }

                g_apartment(q.apartment_id);
            });

            const form_apartment = document.getElementById('form-apartment');
            const button_apartment = document.getElementById('button-apartment');

            const fv = FormValidation.formValidation(form_apartment, {

                fields: {

                    ApartmentName: {
                        validators: {
                            notEmpty: {
                                message: 'Apartman adı boş geçilemez.'
                            },
                            stringLength: {
                                min: 3,
                                message: 'Apartman adı minimum 1 olmalıdır.'
                            }
                        }
                    },

                },
                plugins: {
                    trigger: new FormValidation.plugins.Trigger(),
                    bootstrap: new FormValidation.plugins.Bootstrap(),
                },
            }).on('core.form.validating', function () {
                button_apartment.innerHTML = 'Doğrulanıyor ...';
            });

            // -----
            button_apartment.addEventListener('click', function () {

                fv.validate().then(function (status) {

                    button_apartment.innerHTML = status === 'Valid' ? 'Güncelleniyor...' : 'Lütfen tekrar deneyin';

                    switch (status) {
                        case "Valid":

                            var dm = {
                                ApartmentId: $(qcs.input.apartment_id).val(),
                                ApartmentName: $(qcs.input.apartment_name).val()
                            }
                            console.log(dm);

                            $.post("/ams/app/apartment/add", dm, function (d) {

                                if (d.isSucceed) {
                                    switch (d.statuses) {
                                        case 'x-add':

                                            Swal.fire({
                                                title: "APARTMAN",
                                                text: "Yeni apartman oluşturuldu.",
                                                icon: "success",
                                                timer: 4000,
                                                onOpen: function () { Swal.showLoading() },
                                                allowOutsideClick: false,
                                                allowEscapeKey: false,
                                                buttonsStyling: false,
                                                confirmButtonText: "<i class='la la-headphones'></i> I am game!",
                                                showCancelButton: false,
                                                cancelButtonText: "<i class='la la-thumbs-down'></i> No, thanks",
                                                customClass: {
                                                    confirmButton: "btn btn-danger",
                                                    cancelButton: "btn btn-default"
                                                }
                                            }).then(function (r) {

                                                if (r.dismiss === "timer") {
                                                    $(qcs.modal.apartment).modal('hide');
                                                    l_aparmets();
                                                }

                                            });

                                            break;
                                        case 'x-edit':

                                            Swal.fire({
                                                title: "APARTMAN",
                                                text: "Apartman bilgileri güncellendi.",
                                                icon: "success",
                                                timer: 4000,
                                                onOpen: function () { Swal.showLoading() },
                                                allowOutsideClick: false,
                                                allowEscapeKey: false,
                                                buttonsStyling: false,
                                                confirmButtonText: "<i class='la la-headphones'></i> I am game!",
                                                showCancelButton: false,
                                                cancelButtonText: "<i class='la la-thumbs-down'></i> No, thanks",
                                                customClass: {
                                                    confirmButton: "btn btn-danger",
                                                    cancelButton: "btn btn-default"
                                                }
                                            }).then(function (r) {

                                                if (r.dismiss === "timer") {
                                                    $(qcs.modal.apartment).modal('hide');
                                                    l_aparmets();
                                                }

                                            });

                                            break;
                                    }
                                }

                            }).done(function () {

                            }).fail(function (jqXHR, textStatus, errorThrown) {

                            }).always(function () {

                            });

                            break;
                    }

                });

            });

        }

        function g_apartment(apartment_id) {

            // var dm = { Id: expense_id };

            $.get("/ams/app/apartment/" + apartment_id, function (d) {

                console.log("APARTMENT DETAIL :::::::");
                console.log(d);


                if (d.isSucceed) {
                    switch (d.statuses) {
                        case 'x-detail':

                            $(qcs.input.apartment_id).val(d.view.id);
                            $(qcs.input.apartment_name).val(d.view.apartmentName);


                            // $(qcs.combo.apartments + " option[value=" + d.view.apartmentId + "]").removeAttr('selected').attr('selected', 'selected');
                            // $(qcs.combo.users + " option[value=" + d.view.housingUser + "]").removeAttr('selected').attr('selected', 'selected');
                              
                            break;

                        case 'x-fail':

                            Swal.fire({
                                title: "Hata",
                                text: "İstenmeyen bir hata oluştu.",
                                icon: "error",
                                timer: 4000,
                                onOpen: function () {
                                    Swal.showLoading()
                                },
                                allowOutsideClick: false,
                                allowEscapeKey: false,
                                buttonsStyling: false,
                                confirmButtonText: "<i class='la la-headphones'></i> I am game!",
                                showCancelButton: false,
                                cancelButtonText: "<i class='la la-thumbs-down'></i> No, thanks",
                                customClass: {
                                    confirmButton: "btn btn-danger",
                                    cancelButton: "btn btn-default"
                                }
                            }).then(function (r) {

                                if (r.dismiss === "timer") {
                                    $(qcs.modal.apartment).modal('hide');
                                }
                            });

                            break;
                    }
                }


            }).done(function (d) {

            }).fail(function (jqXHR, textStatus, errorThrown) {

                Swal.fire({
                    title: "Hata",
                    text: "Hata Kodu : " + textStatus,
                    icon: "error",
                    timer: 4000,
                    onOpen: function () {
                        Swal.showLoading()
                    },
                    allowOutsideClick: false,
                    allowEscapeKey: false,
                    buttonsStyling: false,
                    confirmButtonText: "<i class='la la-headphones'></i> I am game!",
                    showCancelButton: false,
                    cancelButtonText: "<i class='la la-thumbs-down'></i> No, thanks",
                    customClass: {
                        confirmButton: "btn btn-danger",
                        cancelButton: "btn btn-default"
                    }
                }).then(function (r) {

                    if (r.dismiss === "timer") { }

                });

            }).always(function (d) {

            });

        }

        function l_aparmets() {

            $(qcs.table).KTDatatable('destroy');
             
            var ds = $.ajax({
                type: 'GET',
                url: "/ams/app/apartments",
                async: false,
                dataType: 'json',
                done: function (data) {
                    return data;
                },
                fail: function (jqXHR, textStatus, errorThrown) {
                    console.log('Could not get posts, server response: ' + textStatus + ': ' + errorThrown);
                }
            }).responseJSON;

            console.log(ds);

            var datatable = $(qcs.table).KTDatatable({
                data: { source: ds, pageSize: 10 },
                layout: {
                    scroll: false, // enable/disable datatable scroll both horizontal and vertical when needed.
                    // height: 450, // datatable's body's fixed height
                    footer: false, // display/hide footer
                },
                // column sorting
                sortable: true,
                pagination: true,
                search: {
                    input: $('#kt_datatable_search_query'),
                    key: 'generalSearch',
                },
                columns: [
                    {
                        field: 'apartmentId',
                        title: '#',
                        sortable: false,
                        width: 20,
                        type: 'number',
                        selector: true,
                        textAlign: 'center',
                    },
                    {
                        field: 'apartmentName',
                        title: 'Apartman',
                        template: function (row) {

                            var status = {
                                1: { 'class': ' label-success' },
                                2: { 'class': ' label-danger' },
                            };

                            return `
                            <div class='d-flex align-items-center'>
                             <b class='mr-3'>${row.apartmentName}</b>
                             <span class="label label-xl label-dot ${status[row.isActive].class}"></span>
                            </div>
                            `;

                        },
                    },
                    {
                        field: '_CreateTime',
                        title: 'Oluşturulma Tarihi',
                        type: 'date',
                        // format: 'MM/DD/YYYY',
                    }, {
                        field: 'createUser',
                        title: 'Oluşturan',
                    }, 
                    // {
                    //     field: 'isActive',
                    //     title: 'Durum',
                    //     template: function (row) {
                    //         var status = {
                    //             1: {
                    //                 'title': 'Aktif',
                    //                 'class': ' label-light-success',
                    //             },
                    //             2: {
                    //                 'title': 'Pasif',
                    //                 'class': ' label-light-danger',
                    //             },
                    //         };
                    //         return '<span class="label font-weight-bold label-lg ' + status[row.isActive].class + ' label-inline">' + status[row.isActive].title + '</span>';
                    //     },
                    // },
                    {
                        field: 'Actions',
                        title: 'İşlem',
                        sortable: false,
                        width: 125,
                        overflow: 'visible',
                        autoHide: false,
                        template: function (row) {


                            // return '\
                            //                             <a href="javascript:;" class="btn btn-sm btn-clean btn-icon  modal-apartment-open" data-apartment-id=' + row.apartmentId + ' data-toggle="tooltip" data-theme="dark" title="Edit" >\
                            //                         <i class="la la-pencil"></i>\
                            //                                     </a>\
                            //                                   \
                            //                                  <a href="javascript:;" class="btn btn-sm btn-clean btn-icon" data-delete-id='+ row.apartmentId + ' data-toggle="tooltip" data-theme="dark" title="Delete">\
                            //                                         <i class="la fa-trash"></i>\
                            //                                     </a>\
                            //                                 ';


                            var r = `
                            <a href="javascript:;" class="btn btn-sm btn-clean btn-icon modal-apartment-edit" data-apartment-id='${row.apartmentId}' data-toggle="tooltip"><i class="flaticon-edit"></i>
                                    </a>
                                    `;

                            return r;



                        },
                    }],
            });

            $('#kt_datatable_search_status').on('change', function (e) {

                // console.log(e.target.value);
                // console.log($(this).val().toLowerCase());

                var status = $(this).val().toLowerCase();
                datatable.search(status, 'isActive');

            });

            // $('#kt_datatable_search_type').on('change', function () {
            //     datatable.search($(this).val().toLowerCase(), 'Type');
            // });

            // $('#kt_datatable_search_status, #kt_datatable_search_type').selectpicker();


            $('#kt_subheader').on('click', function (e) {

                e.preventDefault();

                $('.datatable-input').each(function () {
                    $(this).val('');
                    datatable.column($(this).data('col-index')).search('', false, false);
                });
                datatable.table().draw();
            });


        }



        $(function () {

            apartments();
            l_aparmets();

            $(qcs.table).tooltip({
                selector: '[data-toggle=tooltip]',
                container: 'body'
            });

        });



    </script>

}

